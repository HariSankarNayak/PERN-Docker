# docker-compose.yml
version: "3"
services:
  api:
    container_name: api
    build: 
      context : ./api
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://azularc:azularc@db:5432/db
      NODE_ENV: development
      PORT: 3000
    ports:
      - "3333:3000"
    command: npm run dev
    volumes:
      # - .:/app/
      - "/app/node_modules"
      - "./api:/app/"
  client:
    container_name: client
    build: 
      context : ./client
      dockerfile: Dockerfile
    depends_on:
      - api
    environment:
      NODE_ENV: development
      PORT: 3030
    ports:
      - "3030:3030"
    volumes:
      - "./client:/app/"
      - "./client/node_modules"
  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-azularc}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-azularc}
      POSTGRES_DB: db
      PGDATA: /var/lib/postgresql/data
    ports:
      - "35432:5432"
    restart: unless-stopped
    # networks:
    #   - db
  pg-admin:
    container_name: pg-admin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-azularc@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-azularc}
    volumes:
      - ./api/db/pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - db
    # networks:
    #   - db
    restart: unless-stopped
